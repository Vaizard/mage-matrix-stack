---

- name: Add matrix-synapse repo gpg key
  command: apt-key adv --keyserver keyserver.ubuntu.com --recv-keys AD0592FE47F0DF61

- name: Add matrix-synapse repo
  command: add-apt-repository -s "https://matrix.org/packages/debian/" 
  
- name: Install packages needed by matrix-synapse
  action: apt pkg={{item}} state=present update_cache=yes
  with_items:
   - build-essential
   - python2.7-dev
   - libffi-dev
   - python-pip
   - python-setuptools
   - sqlite3
   - libssl-dev
   - python-virtualenv
   - python3-openssl
   - libjpeg-dev
   - libxslt1-dev
   - python-jinja2
   - python-bleach
   - matrix-synapse
   - libxml2-dev
   - python-lxml
   - python-netaddr
   - postgresql   # postgres backend
   - postgresql-contrib   # postgres backend

- name: Clone synapse from github
  git: repo=https://github.com/matrix-org/synapse.git dest=/opt/synapse version=HEAD

- name: PIP upgrades
  action: pip name={{ item }} extra_args='--upgrade' # pip install --upgrade pip
  with_items:
    - pip
    - setuptools

- name: PIP package upgrades
  pip: name={{ item }} extra_args='--upgrade' # pip install --upgrade --force "{{ item }}"
  with_items:
    - pynacl
    - bcrypt

- name: Configure if registrations are enabled by default or not
  lineinfile: dest=/etc/matrix-synapse/homeserver.yaml
  args:
    regexp: "^(.*)server_name:(.*)"
    line: "server_name: '{{ hostname_server }}'"

- name: Patching /etc/matrix-synapse/homeserver.yaml to expect proxy/loadbalancer for webclient traffic
  patch: >
    src=homeserver.yaml.patch
    dest=/etc/matrix-synapse/homeserver.yaml
    
- name: Configure if registrations are enabled by default or not
  lineinfile: dest=/etc/matrix-synapse/homeserver.yaml
  args:
    regexp: "^(.*)enable_registration:(.*)"
    line: "enable_registration: '{{ enable_registration }}'"

- name: Configure registration shared secret
  lineinfile: dest=/etc/matrix-synapse/homeserver.yaml
  args:
    regexp: "^(.*)registration_shared_secret:(.*)"
    line: "registration_shared_secret: '{{ registration_shared_secret }}'"

- name: Configure max_upload_size
  lineinfile: dest=/etc/matrix-synapse/homeserver.yaml
  args:
    regexp: "^(.*)max_upload_size:(.*)"
    line: "max_upload_size: '{{ max_upload_size }}'"

- name: Configure if captchas are enabled by default or not
  lineinfile: dest=/etc/matrix-synapse/homeserver.yaml
  args:
    regexp: "^(.*)enable_registration_captcha:(.*)"
    line: "enable_registration_captcha: '{{ enable_registration_captcha }}'"

- name: Configure private-key recaptcha key
  lineinfile: dest=/etc/matrix-synapse/homeserver.yaml
  args:
    regexp: "^(.*)recaptcha_private_key:(.*)"
    line: "recaptcha_private_key: '{{ recaptcha_private_key }}'"

- name: Configure public-key recaptcha key
  lineinfile: dest=/etc/matrix-synapse/homeserver.yaml
  args:
    regexp: "^(.*)recaptcha_public_key:(.*)"
    line: "recaptcha_public_key: '{{ recaptcha_public_key }}'"

- name: Configure turn_uris
  lineinfile: dest=/etc/matrix-synapse/homeserver.yaml
  args:
    regexp: "^(.*)turn_uris:(.*)"
    line: "turn_uris: [ \"turn:{{ hostname_server }}:3478?transport=udp\", \"turn:{{ hostname_server }}:3478?transport=tcp\" ]"

- name: Configure turn_user_lifetime
  lineinfile: dest=/etc/matrix-synapse/homeserver.yaml
  args:
    regexp: "^(.*)turn_shared_secret:(.*)"
    line: "turn_shared_secret: '{{ turn_shared_secret }}'"

- name: Configure turn_user_lifetime
  lineinfile: dest=/etc/matrix-synapse/homeserver.yaml
  args:
    regexp: "^(.*)turn_user_lifetime:(.*)"
    line: "turn_user_lifetime: 86400000"

- name: Configuring guest access
  lineinfile: dest=/etc/matrix-synapse/homeserver.yaml
  args:
    regexp: '^(.*)allow_guest_access(.*)'
    line: "allow_guest_access: {{ guest_access }}"
    create: yes
    

# All the other required configuration

- name: Ensure template dir exists
  file: path=/opt/synapse/res/templates state=directory

- name: "Configure /opt/synapse/res/templates/* files"
  copy: src="synapse-templates/{{ item }}" dest="/opt/synapse/res/templates/{{ item }}"
  with_items:
    - "mail.css"
    - "mail-Vector.css"
    - "notif.html"
    - "notif_mail.html"
    - "notif_mail.txt"
    - "notif.txt"
    - "room.html"
    - "room.txt"

- name: Configuring report_stats, public_baseurl, email_notifs and database
  blockinfile:
    dest: /etc/matrix-synapse/homeserver.yaml
    insertafter: EOF
    block: |
      report_stats: {{ report_stats }}
      public_baseurl: '{{ public_baseurl }}'

      email:
         enable_notifs: {{ email_enable_notifs }}
         smtp_host: '{{ email_smtp_host }}'
         smtp_port: {{ email_smtp_port }}
         smtp_user: '{{ email_smtp_user }}'
         smtp_pass: '{{ email_smtp_pass }}'
         riot_base_url: '{{ email_riot_base_url }}'
         require_transport_security: {{ email_require_transport_security }}
         notif_from: '{{ email_notif_from }}'
         app_name: Matrix
         template_dir: /opt/synapse/res/templates
         notif_template_html: notif_mail.html
         notif_template_text: notif_mail.txt
         notif_for_new_users: {{ email_notif_for_new_users }}

      database:
          name: {{ db_engine }}
          args:
              user: {{ db_user }}
              password: {{ db_password }}
              database: {{ db_name }}
              host: {{ db_host }}
              cp_min: {{ db_cp_min }}
              cp_max: {{ db_cp_max }}

      url_preview_ip_range_blacklist:
        - '127.0.0.0/8'
        - '10.0.0.0/8'
        - '172.16.0.0/12'
        - '192.168.0.0/16'

      {% if restrict_federation %}
      federation_domain_whitelist:
        - {{ hostname_server }}
      {% endif %}

- name: Start matrix-synapse server
  service: name=matrix-synapse state=restarted

- name: Make sure matrix-synapse is enabled
  service: name=matrix-synapse enabled=yes

